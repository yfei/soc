
[default rule]
id=53
type=1
preid=
level=1
subclass=2
family=0
isGene=1
colmapping=
rule=insert into rule53 select *,sum(counts) as num ,count(*) as event_count , count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase ((level < 3 and srcip <> 0)).win:time_batch(600 sec) group by classes,subclass,family,srcorgid,srcip,srcorgid,platformid,customerid,orgid output last every 600 second
output=*|classes|subclass|family|srcorgid|srcip|srcorgid

[scanner event]
id=1
type=0
preid=0
level=1
subclass=2
family=1
isGene=1
rule=insert into rule1 select *,sum(counts) as num ,count(*) as event_count, count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase((classes = 3 and subclass = 1) and srcin = 3 and srcip != 0).win:time_batch(60 sec)  group by srcorgid, srcip,customerid,platformid having sum(counts)>=10 and count (distinct dstip)>=5 output last every 60 second
output=*|srcorgid|srcip

[virus attack]
id=2
type=0
preid=0
level=3
subclass=2
family=2
isGene=1
rule=insert into rule2 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 5) or (classes = 5 and subclass = 3)) and srcip!=0).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[DDOS attack]
id=3
type=0
preid=0
level=2
subclass=2
family=3
isGene=1
rule=insert into rule3 select *,sum(counts) as num , count(*) as event_count, count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase(((classes=3 and subclass=4 and family=1) or (classes=3 and subclass=4 and family=2)) and (srcip!=0) and srcin=3).win:time_batch(300 sec)   group by srcorgid, srcip,customerid,platformid output last every 300 second
output=*|srcorgid|srcip

[pass guess]
id=4
type=0
preid=0
level=2
subclass=2
family=4
isGene=1
rule=insert into rule4 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase(((classes=3 and subclass=4 and family=8) or (classes=3 and subclass=8 and family=2)) and dstip!=0).win:time_batch(60 sec)  group by srcorgid,dstorgid, srcip, dstip,account ,customerid,platformid having sum(counts) >= 5 output last every 60 second
output=*|srcorgid|dstorgid|srcip|dstip|account

[password list]
id=61
type=0
preid=0
level=2
subclass=2
family=4
isGene=1
rule=insert into rule61 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 8)) and srcip!=0).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[sql]
id=5
type=0
preid=0
level=2
subclass=2
family=5
isGene=1
rule=insert into rule5 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 5)) and srcip!=0 and srcin=3).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[vulnerabilities use]
id=66
type=0
preid=0
level=2
subclass=2
family=13
isGene=1
rule=insert into rule66 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 10)) and srcip!=0 ).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[pass guess success]
id=51
type=0
preid=61
level=2
subclass=2
family=14
isGene=1
rule=insert into rule51 select * ,sum(eventbase.counts) as num, count(*) as event_count, count (distinct eventbase.dstip) as ip4_count, count(distinct eventbase.dstipv6) as ip6_count from rule61.win:time_batch(60 sec) as T61, EventBase((eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 1) or (eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 17)).win:time_batch(60 sec) as eventbase where( eventbase.srcorgid=T61.srcorgid and eventbase.dstorgid=T61.dstorgid and eventbase.srcip=T61.srcip and eventbase.dstip=T61.dstip and eventbase.customerid=T61.customerid and eventbase.platformid=T61.platformid ) group by eventbase.srcorgid, eventbase.srcip,eventbase.dstorgid, eventbase.dstip,eventbase.customerid,eventbase.platformid output last every 60 second
output=*|srcorgid|srcip|dstorgid|dstip

[account list]
id=94
type=0
preid=0
level=2
subclass=2
family=16
isGene=1
rule=insert into rule94 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 8 and family = 2) and dstip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid having count (distinct account)>=3 output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[XSS]
id=8
type=0
preid=0
level=2
subclass=2
family=17
isGene=1
rule=insert into rule8 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 6)) and srcip!=0 and srcin=3 ).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[remote control]
id=9
type=0
preid=0
level=2
subclass=2
family=21
isGene=1
rule=insert into rule9 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 32) or (classes = 3 and subclass = 4 and family = 34)) and srcin =3).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip ,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[backdoor & trojan]
id=88
type=1
preid=
level=3
subclass=2
family=29
isGene=1
colmapping=
rule=insert into rule88 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase (((classes = 3 and subclass = 4 and family = 12) and srcip <> 0)).win:time_batch(5 sec) group by srcorgid,srcip,srcorgid,dstorgid,dstip,dstorgid,platformid,customerid,orgid output last every 5 second
output=*|srcorgid|srcip|srcorgid|dstorgid|dstip|dstorgid

[C&C]
id=50
type=0
preid=0
level=3
subclass=2
family=30
isGene=1
rule=insert into rule50 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 15)) and srcip!=0).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[malicious code]
id=6
type=0
preid=0
level=2
subclass=2
family=31
isGene=1
rule=insert into rule6 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 14) or (classes = 3 and subclass = 4 and family = 28) or (classes = 3 and subclass = 4 and family = 40)) and srcip!=0).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[ARP exceptions]
id=52
type=0
preid=0
level=1
subclass=2
family=35
isGene=1
rule=insert into rule52 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 11 and family = 1)) and srcip!=0 ).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[overflow]
id=75
type=0
preid=0
level=2
subclass=2
family=43
isGene=1
rule=insert into rule75 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 4) or (classes = 3 and subclass = 4 and family = 3)) and srcip!=0 ).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip ,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[shellcode]
id=81
type=0
preid=0
level=2
subclass=2
family=44
isGene=1
rule=insert into rule81 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 13) or (classes = 3 and subclass = 4 and family = 56)) and srcip!=0 ).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip ,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[IE attack]
id=54
type=0
preid=0
level=2
subclass=2
family=45
isGene=1
rule=insert into rule54 select *,sum(counts) as num, count(*) as event_count, count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase((classes = 3 and subclass = 4 and family = 29) and srcip!=0 and srcin=3 ).win:time_batch(300 sec) group by srcorgid, srcip,customerid,platformid output last every 300 second
output=*|srcorgid|srcip

[inject attack]
id=89
type=0
preid=0
level=3
subclass=2
family=46
isGene=1
rule=insert into rule89 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 17) or (classes = 3 and subclass = 4 and family = 33) or (classes = 3 and subclass = 4 and family = 35) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[script attack]
id=90
type=0
preid=0
level=3
subclass=2
family=47
isGene=1
rule=insert into rule90 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count,min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 20) or (classes = 3 and subclass = 4 and family = 41) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip ,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[attack tool]
id=91
type=0
preid=0
level=3
subclass=2
family=48
isGene=1
rule=insert into rule91 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 21) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[HTTP attack]
id=93
type=0
preid=0
level=2
subclass=2
family=49
isGene=1
rule=insert into rule93 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 38) or (classes = 3 and subclass = 4 and family = 39) or (classes = 3 and subclass = 3 and family = 16) or (classes = 3 and subclass = 3 and family = 17) or (classes = 3 and subclass = 3 and family = 18) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[information leak]
id=92
type=0
preid=0
level=2
subclass=2
family=50
isGene=1
rule=insert into rule92 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 30) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[highlevel event stat]
id=86
type=0
preid=0
level=2
subclass=2
family=51
isGene=1
rule=insert into rule86 select *,sum(counts) as num , count(*) as event_count, count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase((csfflag=0) and level>=3).win:time_batch(300 sec) group by classes, subclass, family, srcip, srcorgid, dstip, dstorgid ,customerid,platformid output last every 300 second
output=*|classes|subclass|family|srcip|srcorgid|dstip|dstorgid

[Malicious IP access]
id=96
type=0
preid=0
level=2
subclass=2
family=52
isGene=1
rule=insert into rule96 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 9 and subclass = 2))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[Malicious domain name]
id=97
type=0
preid=0
level=2
subclass=2
family=53
isGene=1
rule=insert into rule97 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 9 and subclass = 1))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[Access malicious IP ]
id=99
type=0
preid=0
level=3
subclass=2
family=54
isGene=1
rule=insert into rule99 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 9 and subclass = 2 and family = 2))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[̽�⹥��]
id=100
type=0
preid=
level=1
subclass=2
family=55
isGene=1
rule=insert into rule100 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count,  min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 51) and srcip != 0)).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[Э�鹥��]
id=101
type=0
preid=0
level=1
subclass=2
family=56
isGene=1
rule=insert into rule101 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime   , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 23))).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[Ŀ¼��������]
id=102
type=0
preid=0
level=1
subclass=2
family=57
isGene=1
rule=insert into rule102 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime   , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 1 and family = 7))).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[�쳣����]
id=103
type=0
preid=0
level=1
subclass=2
family=58
isGene=1
rule=insert into rule103 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime   , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 59))).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[�Զ��幥��]
id=104
type=0
preid=0
level=1
subclass=2
family=59
isGene=1
rule=insert into rule104 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime   , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 60))).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[ѧϰ���򹥻�]
id=105
type=0
preid=0
level=1
subclass=2
family=60
isGene=1
rule=insert into rule105 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime   , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 61))).win:time_batch(300 sec) group by dstorgid,srcorgid,classes, subclass, family, srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|classes|subclass|family|srcip|dstip

[DNS����]
id=108
type=0
preid=
level=1
subclass=2
family=61
isGene=1
rule=insert into rule108 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 4 and family = 64))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[�����ڲ�pc�Ƿ񱻸�Ⱦ]
id=110
type=0
preid=
level=3
subclass=2
family=62
isGene=1
rule=insert into rule110 select *,sum(counts) as num ,count(*) as event_count , count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel   from EventBase(((classes = 9) and (srcin = 4 or srcin = 1) and dstin = 3 and dstip != 134744072 and dstip != 1920103026)).win:time_batch(300 sec) group by platformid,customerid,srcorgid,srcip output last every 300 second
output=*|srcorgid|srcip

[服务器被恶意感染]
id=111
type=1
preid=
level=3
subclass=2
family=63
isGene=1
colmapping=
rule=insert into rule111 select *,sum(counts) as num ,count(*) as event_count , count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase (((classes = 1 and subclass = 1 and family = 2) and dstin = 3 and ( srcin = 2 or srcin = 5) and dstip <> 1920103026 and dstip <> 134744072)).win:time_batch(300 sec) group by srcip,srcorgid,platformid,customerid,orgid output last every 300 second
output=*|srcip|srcorgid

[access sensitive file]
id=82
type=0
preid=0
level=1
subclass=3
family=1
isGene=1
rule=insert into rule82 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 3 and family = 6)) and srcip!=0 ).win:time_batch(300 sec) group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[net exception]
id=80
type=0
preid=0
level=1
subclass=3
family=2
isGene=1
rule=insert into rule80 select *,sum(counts) as num , count(*) as event_count, count (distinct dstip) as ip4_count, count(distinct dstipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 11)) and srcip!=0 ).win:time_batch(300 sec) group by srcorgid, srcip,customerid,platformid output last every 300 second
output=*|srcorgid|srcip

[illegal outconnect]
id=79
type=0
preid=0
level=2
subclass=3
family=3
isGene=1
rule=insert into rule79 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase.win:time_batch(300 sec) where ((classes = 3 and subclass = 11 and family = 5)) and srcip!=0 and dstin=3 group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[exception outconnection]
id=84
type=0
preid=0
level=2
subclass=3
family=3
isGene=1
rule=insert into rule84 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase((srcin!=3) and (dstin =3 ) and dstip>0 ).win:time_batch(600 sec)  group by dstorgid,dstip,customerid,platformid having sum(counts) >= 100 and count (distinct srcip)>=10 output last every 600 second
output=*|dstorgid|dstip

[Suspicious documents & procedures]
id=83
type=0
preid=0
level=2
subclass=3
family=4
isGene=1
rule=insert into rule83 select *,sum(counts) as num , count(*) as event_count, 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 3 and subclass = 13 and family = 2)or (classes = 3 and subclass = 3 and family = 21) or (classes = 3 and subclass = 3 and family = 22) or (classes = 3 and subclass = 3 and family = 23)) and srcip!=0).win:time_batch(300 sec)  group by srcorgid,dstorgid, srcip, dstip,customerid,platformid output last every 300 second
output=*|srcorgid|dstorgid|srcip|dstip

[Fraudulent use of agreement]
id=98
type=0
preid=0
level=2
subclass=3
family=6
isGene=1
rule=insert into rule98 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 7 and subclass = 2 and family = 3))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip, dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[107]
id=107
type=0
preid=0
level=1
subclass=3
family=7
isGene=1
rule=insert into rule107 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 4 and subclass = 6 and family = 2))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip,dstip,customerid,platformid  output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[106]
id=106
type=0
preid=0
level=1
subclass=3
family=8
isGene=1
rule=insert into rule106 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count, min(starttime) as minstarttime, max(endtime) as maxendtime  , max(level) as maxlevel from EventBase(((classes = 4 and subclass = 6 and family = 1))).win:time_batch(300 sec) group by dstorgid,srcorgid,srcip,dstip,customerid,platformid output last every 300 second
output=*|dstorgid|srcorgid|srcip|dstip

[正常外联]
id=113
type=1
preid=
level=1
subclass=4
family=1
isGene=1
colmapping=
rule=insert into rule113 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase ((( srcin = 2 or srcin = 5 or srcin = 6 or srcin = 7) and dstin = 3 and bwlFlag = 65)).win:time_batch(300 sec) group by srcip,srcorgid,dstip,dstorgid,protocol,platformid,customerid,orgid output last every 300 second
output=*|srcip|srcorgid|dstip|dstorgid|protocol

[srcip stat]
id=20013
type=0
preid=0
level=1
subclass=4
family=16
isGene=1
rule=insert into rule20013 select *, count(*) as num from EventBase(sensormask<>2097152).win:time_batch(300 sec) group by EventBase.srcorgid,EventBase.srcip output last every 300 second
output=*|srcip|srcorgid

[dstip stat]
id=20014
type=0
preid=0
level=1
subclass=4
family=17
isGene=1
rule=insert into rule20014 select *, count(*) as num from EventBase(sensormask<>2097152).win:time_batch(300 sec) group by EventBase.dstorgid,EventBase.dstip output last every 300 second
output=*|dstip|dstorgid

[操作系统修改密码分析]
id=165
type=1
preid=
level=1
subclass=2
family=71
isGene=0
colmapping=
rule=insert into rule165 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase ((num10 = 1 and (classes = 3 and subclass = 8 and family = 18) and account!='')).win:time_batch(60 sec) group by account,dstip,dstorgid,platformid,customerid,orgid output last every 60 second
output=*|account|dstip|dstorgid

[手动改密]
id=166
type=0
preid=165
level=2
subclass=2
family=69
isGene=1
rule=insert into rule166 select * ,sum(eventbase.counts) as num, count(*) as event_count, count (distinct eventbase.srcip) as ip4_count, count(distinct eventbase.srcipv6) as ip6_count,eventbase.starttime as minstarttime, eventbase.endtime as maxendtime  , max(eventbase.level) as maxlevel from rule165.win:time_batch(300 sec) as T165, EventBase(eventbase.sensormodel=1302 and (eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 49)).win:time_batch(300 sec) as eventbase where( eventbase.account=T165.account and eventbase.dstorgid=T165.dstorgid and eventbase.dstip=T165.dstip and eventbase.customerid=T165.customerid and eventbase.platformid=T165.platformid ) group by eventbase.dstorgid, eventbase.dstip,eventbase.account,eventbase.customerid,eventbase.platformid output last every 300 second
output=*|dstorgid|dstip|account

[非法改密]
id=167
type=0
preid=165
level=3
subclass=2
family=70
isGene=1
rule=insert into rule167 select * ,sum(T165.counts) as num, count(*) as event_count, count (distinct T165.srcip) as ip4_count, count(distinct T165.srcipv6) as ip6_count,T165.starttime as minstarttime, T165.endtime as maxendtime  , max(T165.level) as maxlevel from rule165.win:time_batch(300 sec) as T165 left outer join EventBase(eventbase.sensormodel=1302 and ((eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 51) or (eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 50) or (eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 49) or (eventbase.classes = 3 and eventbase.subclass = 8 and eventbase.family = 48))).win:time_batch(300 sec) as eventbase on eventbase.account=T165.account and eventbase.dstorgid=T165.dstorgid and eventbase.dstip=T165.dstip and eventbase.customerid=T165.customerid and eventbase.platformid=T165.platformid output last every 300 second
output=*|dstorgid|dstip|account

[试图获取管理员权限]
id=213
type=1
preid=
level=2
subclass=2
family=72
isGene=1
colmapping=
rule=insert into rule213 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase (((classes = 3 and subclass = 4 and family = 72) and srcin = 3 and dstin <> 3)).win:time_batch(300 sec) group by srcip,srcorgid,dstip,dstorgid,platformid,customerid,orgid output last every 300 second
output=*|srcip|srcorgid|dstip|dstorgid

[账号异地登录异常场景分析]
id=196
type=1
preid=
level=3
subclass=3
family=12
isGene=1
colmapping=
rule=insert into rule196 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase (((classes = 3 and subclass = 8 and family = 1) and srcLongitude <> '0')).win:time_batch(60 sec) group by account,dstip,dstorgid,platformid,customerid,orgid having  count(distinct srcGeo2Name) >= 2 output last every 60 second
output=*|account|dstip|dstorgid

[web攻击渗透分析]
id=209
type=1
preid=
level=2
subclass=2
family=19
isGene=1
colmapping=
rule=insert into rule209 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase (((classes = 3 and subclass = 4 and family = 67) and srcin = 3 and dstin <> 3 and time in  ('2019','06') )).win:time_batch(300 sec) group by srcip,srcorgid,dstip,dstorgid,platformid,customerid,orgid output last every 300 second
output=*|srcip|srcorgid|dstip|dstorgid

[访问恶意IP2]
id=223
type=1
preid=
level=2
subclass=2
family=54
isGene=1
colmapping=
rule=insert into rule223 select *,sum(counts) as num ,count(*) as event_count , 0 as ip4_count,0 as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase ((baddstip = '1')).win:time_batch(30 sec) group by srcip,srcorgid,dstip,dstorgid,platformid,customerid,orgid output last every 30 second
output=*|srcip|srcorgid|dstip|dstorgid

[恶意IP访问2]
id=222
type=1
preid=
level=3
subclass=2
family=72
isGene=1
colmapping=
rule=insert into rule222 select *,sum(counts) as num ,count(*) as event_count , count (distinct srcip) as ip4_count, count(distinct srcipv6) as ip6_count , min(starttime) as minstarttime, max(endtime) as maxendtime , max(level) as maxlevel from EventBase ((badsrcip = '1')).win:time_batch(23 sec) group by dstip,dstorgid,platformid,customerid,orgid output last every 23 second 
output=*|dstip|dstorgid
