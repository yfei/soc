
[alarm level]
id=20001
type=0
preid=0
level=1
subclass=1
family=5
isGene=1
rule=insert into rule20001 select * ,count(*) as event_count, count(*) as num , max(level) as maxlevel from AlarmEvt.win:time_batch(5 min) group by AlarmEvt.level,AlarmEvt.dstorgid output last every 300 second
output=&|level|dstorgid

[alarm type]
id=20002
type=0
preid=0
level=1
subclass=1
family=6
isGene=1
rule=insert into rule20002 select * ,count(*) as event_count, count(*) as num from AlarmEvt.win:time_batch(5 min) group by AlarmEvt.classes,AlarmEvt.subclass,AlarmEvt.dstorgid output last every 300 second
output=&|classes|subclass|dstorgid

[attack srcip]
id=20003
type=0
preid=0
level=1
subclass=1
family=7
isGene=1
rule=insert into rule20003 select * ,count(*) as event_count, count(*) as num from EventBase.win:time_batch(5 min) where srcip!=0 and classes=3 and subclass<6 group by srcip, dstorgid output last every 300 second
output=&|srcip|dstorgid

[attack dstip]
id=20004
type=0
preid=0
level=1
subclass=1
family=8
isGene=1
rule=insert into rule20004 select * ,count(*) as event_count, count(*) as num from EventBase.win:time_batch(5 min) where dstip!=0 and classes=3 and subclass<6 group by dstip, dstorgid output last every 300 second
output=&|dstip|dstorgid

[数据安全审计数据库操作类型统计]
id=114
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','event_count':'s1'}
rule=insert into rule114 select *,count(*) as event_count from EventBase (((sensormodel = 509))).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second  order by event_count desc
output=&|event_count|classes|subclass|family

[安全态势感知-攻击源Top10统计]
id=115
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcip':'gc1','srcGeo1Name':'gc2','num':'s1'}
rule=insert into rule115 select *,sum(counts) as num from EventBase ((level >= 3 and srcip <> 0 and srcin = 3)).win:time_batch(600 sec) group by srcip,srcorgid,srcGeo1Name,platformid,customerid,orgid output last every 600 second  order by num desc limit 10
output=&|num|srcip|srcGeo1Name

[安全态势感知-攻击目的Top10]
id=116
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstip':'gc1','num':'s1'}
rule=insert into rule116 select *,sum(counts) as num from EventBase ((level >= 3 and dstip <> 0 and dstin <> 3)).win:time_batch(600 sec) group by dstip,dstorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstip

[安全态势感知告警事件类型统计]
id=118
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule118 select *,sum(counts) as num from EventBase ((level >= 2 and ( sensormask = 8 or sensormask = 131072))).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second  order by num desc limit 20
output=&|num|classes|subclass|family

[安全态势感知目的业务系统Top5]
id=121
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstbusiid':'gc1','num':'s1'}
rule=insert into rule121 select *,sum(counts) as num from EventBase ((dstbusiid <> 0)).win:time_batch(600 sec) group by dstbusiid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstbusiid

[安全态势感知告警及阻断次数统计]
id=122
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule122 select *,sum(counts) as num from EventBase ((sensormask = 8 or sensormask = 131072)).win:time_batch(5 sec) output last every 5 second
output=&|num

[网络安全域互联网攻击类型分布]
id=123
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule123 select *,sum(counts) as num from EventBase ((( srcbusilink = '7401' or dstbusilink = '7401'))).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second
output=&|num|classes|subclass|family

[网络安全域互联网攻击级别统计]
id=124
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'level':'gc1','num':'s1'}
rule=insert into rule124 select *,sum(counts) as num from EventBase ((srcbusilink = '7401' or dstbusilink = '7401')).win:time_batch(600 sec) group by level,platformid,customerid,orgid output last every 600 second
output=&|num|level

[网络安全域互联网攻击源Top10]
id=125
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcip':'gc1','num':'s1'}
rule=insert into rule125 select *,sum(counts) as num from EventBase ((dstbusilink = '7401' and srcip <> 0)).win:time_batch(600 sec) group by srcip,srcorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|srcip

[网络安全域工业互联网攻击类型分布]
id=126
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule126 select *,sum(counts) as num from EventBase ((srcbusilink = '7402' or dstbusilink = '7402')).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second
output=&|num|classes|subclass|family

[网络安全域工业互联网攻击级别统计]
id=127
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'level':'gc1','num':'s1'}
rule=insert into rule127 select *,sum(counts) as num from EventBase ((srcbusilink = '7402' or dstbusilink = '7402')).win:time_batch(600 sec) group by level,platformid,customerid,orgid output last every 600 second
output=&|num|level

[网络安全域工业互联网攻击源Top10]
id=128
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcip':'gc1','num':'s1'}
rule=insert into rule128 select *,sum(counts) as num from EventBase ((srcip <> 0 and dstbusilink = '7402')).win:time_batch(600 sec) group by srcip,srcorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|srcip

[网络安全域内网办公区攻击类型分布]
id=129
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule129 select *,sum(counts) as num from EventBase ((( srcin = 1 or srcin = 4) or ( dstin = 1 or dstin = 4))).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second
output=&|num|classes|subclass|family

[网络安全域内网办公区攻击级别统计]
id=130
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'level':'gc1','num':'s1'}
rule=insert into rule130 select *,sum(counts) as num from EventBase ((srcin = 1 or srcin = 4 or dstin = 1 or dstin = 4)).win:time_batch(600 sec) group by level,platformid,customerid,orgid output last every 600 second
output=&|num|level

[网络安全域内网办公区攻击目的Top5]
id=132
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstip':'gc1','num':'s1'}
rule=insert into rule132 select *,sum(counts) as num from EventBase ((( dstin = 1 or dstin = 4) and dstip <> 0)).win:time_batch(600 sec) group by dstip,dstorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstip

[数据安全审计泄密途径]
id=134
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule134 select *,sum(counts) as num from EventBase ((sensormask = 32768)).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second
output=&|num|classes|subclass|family

[数据安全审计敏感事件等级]
id=135
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'level':'gc1','num':'s1'}
rule=insert into rule135 select *,sum(counts) as num from EventBase ((sensormask = 32768)).win:time_batch(600 sec) group by level,platformid,customerid,orgid output last every 600 second
output=&|num|level

[数据安全审计敏感事件数量统计]
id=136
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule136 select *,sum(counts) as num from EventBase ((sensormask = 32768)).win:time_batch(10 sec) output last every 10 second
output=&|num

[安全态势感知访问数据统计]
id=137
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule137 select *,sum(counts) as num from EventBase ((sensormask = 2097152)).win:time_batch(60 sec) output last every 60 second
output=&|num

[数据安全审计数据库告警事件类型统计]
id=139
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'classes':'gc1','subclass':'gc2','family':'gc3','num':'s1'}
rule=insert into rule139 select *,sum(counts) as num from EventBase (((sensormodel = 508))).win:time_batch(600 sec) group by classes,subclass,family,platformid,customerid,orgid output last every 600 second
output=&|num|classes|subclass|family

[数据安全审计告警事件等级统计]
id=141
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'level':'gc1','num':'s1'}
rule=insert into rule141 select *,sum(counts) as num from EventBase (((sensormodel = 508))).win:time_batch(600 sec) group by level,platformid,customerid,orgid output last every 600 second
output=&|num|level

[数据安全审计敏感事件类型]
id=142
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'summary':'gc1','num':'s1'}
rule=insert into rule142 select *,sum(counts) as num from EventBase ((sensormask = 32768)).win:time_batch(600 sec) group by summary,platformid,customerid,orgid output last every 600 second
output=&|num|summary

[数据安全审计SQL注入数量统计]
id=143
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule143 select *,sum(counts) as num from EventBase (((sensormodel = 508) and (classes = 3 and subclass = 40 and family = 11))).win:time_batch(10 sec) output last every 10 second
output=&|num

[数据安全审计攻击源TOP10]
id=144
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcip':'gc1','num':'s1'}
rule=insert into rule144 select *,sum(counts) as num from EventBase (((sensormodel = 508))).win:time_batch(600 sec) group by srcip,srcorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|srcip

[数据安全审计问题数据库TOP10]
id=145
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstip':'gc1','num':'s1'}
rule=insert into rule145 select *,sum(counts) as num from EventBase (((sensormodel = 508))).win:time_batch(600 sec) group by dstip,dstorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstip

[网络安全拓扑IDS告警阻断数量]
id=146
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule146 select *,sum(counts) as num from EventBase ((sensormask = 8 and str1 = 'IDS')).win:time_batch(10 sec) output last every 10 second
output=&|num

[网络安全拓扑WAF告警阻断数量]
id=147
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule147 select *,sum(counts) as num from EventBase ((sensormask = 131072)).win:time_batch(10 sec) output last every 10 second
output=&|num

[网络安全拓扑数据审计告警阻断次数]
id=148
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule148 select *,sum(counts) as num from EventBase (((sensormodel = 508))).win:time_batch(10 sec) output last every 10 second
output=&|num

[安全域互联网攻击业务系统top5]
id=149
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstbusiid':'gc1','num':'s1'}
rule=insert into rule149 select *,sum(counts) as num from EventBase ((dstbusilink = '7401' and level >= 2)).win:time_batch(600 sec) group by dstbusiid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstbusiid

[安全域工业互联网攻击业务top5]
id=150
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstbusiid':'gc1','num':'s1'}
rule=insert into rule150 select *,sum(counts) as num from EventBase ((level >= 2 and dstbusilink = '7402')).win:time_batch(600 sec) group by dstbusiid,platformid,customerid,orgid output last every 600 second  order by num desc limit 100
output=&|num|dstbusiid

[扫描事件统计分析]
id=151
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule151 select *,sum(counts) as num from EventBase (((classes = 3 and subclass = 1))).win:time_batch(10 sec) output last every 10 second
output=&|num

[病毒事件统计分析]
id=152
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule152 select *,sum(counts) as num from EventBase (((classes = 3 and subclass = 5))).win:time_batch(10 sec) output last every 10 second
output=&|num

[木马后门事件统计分析]
id=153
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule153 select *,sum(counts) as num from EventBase (((classes = 3 and subclass = 4 and family = 12))).win:time_batch(10 sec) output last every 10 second
output=&|num

[告警及阻断次数年度统计]
id=154
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
accumulative=1
accumulationCol=num
accumulationUnit=Y
rule=insert into rule154 select *,sum(counts) as num from EventBase ((sensormask = 8 or sensormask = 131072)).win:time_batch(10 sec) output last every 10 second
output=&|num

[产业攻击统计]
id=155
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstorgid':'gc1','num':'s1'}
rule=insert into rule155 select *,sum(counts) as num from EventBase ((( sensormask = 8 or sensormask = 131072) and dstin <> 3 and dstin <> 1 and dstin <> 4)).win:time_batch(600 sec) group by dstorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 10
output=&|num|dstorgid

[产业业务访问统计]
id=156
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstorgid':'gc1','num':'s1'}
rule=insert into rule156 select *,sum(counts) as num from EventBase ((sensormask = 2097152 and ( dstorgid = 1 or dstorgid = 2 or dstorgid = 3 or dstorgid = 4 or dstorgid = 5 or dstorgid = 7 or dstorgid = 6 or dstorgid = 21 or dstorgid = 22) and dstin <> 3)).win:time_batch(600 sec) group by dstorgid,platformid,customerid,orgid output last every 600 second  order by num desc limit 10
output=&|num|dstorgid

[系统业务访问统计]
id=157
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dns':'gc1','num':'s1'}
rule=insert into rule157 select *,sum(counts) as num from EventBase ((sensormask = 2097152 and dns <> 'null')).win:time_batch(600 sec) group by dns,platformid,customerid,orgid output last every 600 second  order by num desc limit 10
output=&|num|dns

[网络安全拓扑IPS事件统计]
id=158
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule158 select *,sum(counts) as num from EventBase ((sensormask = 8 and str1 = 'IPS')).win:time_batch(10 sec) output last every 10 second
output=&|num

[安全态势WEB攻击统计]
id=159
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'num':'s1'}
rule=insert into rule159 select *,sum(counts) as num from EventBase ((sensormask = 131072 and rawlevel = 'High')).win:time_batch(10 sec) output last every 10 second
output=&|num

[业务稳定性分析平均相应时间与最大相应时间]
id=161
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'event_count':'s1','avg_df1':'s6','max_df1':'s7'}
rule=insert into rule161 select *,count(*) as event_count ,avg(df1*1000) as avg_df1,max(df1*1000) as max_df1 from EventBase ((sensormask = 2097152)).win:time_batch(10 sec) output last every 10 second
output=&|event_count|avg_df1|max_df1

[业务稳定性监控各省监控]
id=162
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcGeo2Code':'gc1','avg_df1':'s6','event_count':'s1'}
rule=insert into rule162 select *,count(*) as event_count,avg(df1*1000) as avg_df1 from EventBase ((sensormask = 2097152 and (srcGeo1Code = 'CN') and srcGeo2Code<>'')).win:time_batch(10 sec) group by srcGeo2Code output last every 10 second
output=&|avg_df1|srcGeo2Code|event_count

[业务系统监控城市维度最慢Top5]
id=163
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'srcGeo3Code':'gc1','avg_df1':'s6','event_count':'s1'}
rule=insert into rule163 select *,avg(df1*1000) as avg_df1,count(*) as event_count from EventBase ((sensormask = 2097152) and srcGeo3Code<>'').win:time_batch(10 sec) group by srcGeo3Code output last every 10 second  order by avg_df1 desc limit 20
output=&|avg_df1|srcGeo3Code|event_count

[业务稳定监控系统维度性能最慢分析]
id=164
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=1
colmapping={'dstbusiid':'gc1','avg_df1':'s6','event_count':'s1'}
rule=insert into rule164 select *,avg(df1*1000) as avg_df1,count(*) as event_count from EventBase ((sensormask = 2097152)).win:time_batch(10 sec) group by dstbusiid  output last every 10 second  order by avg_df1 desc limit 20
output=&|avg_df1|dstbusiid|event_count

[流入流量统计值]
id=212
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=0
colmapping={'event_count':'s1'}
rule=insert into rule212 select *,count(*) as event_count from EventBase ((dstin <> 3 and sensormask = 512)).win:time_batch(300 sec) output last every 300 second
output=&|event_count

[流入流量统计值]
id=206
type=2
preid=
level=-1
subclass=-1
family=-1
isGene=0
colmapping={'event_count':'s1'}
rule=insert into rule206 select *,count(*) as event_count from EventBase ((dstin <> 3 and sensormask = 512 and time in  ('2019','05') )).win:time_batch(300 sec) output last every 300 second
output=&|event_count

[攻击源国家Top5]
id=225
type=3
preid=
level=-1
subclass=-1
family=-1
isGene=0
colmapping={'srcGeo1Name':'gc1','num':'s1'}
rule=insert into rule225 select *,sum(counts) as num from EventBase (((classes = 3 and subclass = 4 and family = 1) and (dstGeo1Code <> ''))).win:time_batch(300 sec) group by srcGeo1Name,platformid,customerid,orgid output last every 300 second
output=&|num|srcGeo2Name
